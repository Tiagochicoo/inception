server {
    listen 80;
    server_name 42lisboa.com;
    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name 42lisboa.com;

    ssl_certificate     /etc/ssl/certs/cert.crt;
    ssl_certificate_key /etc/ssl/private/cert.key;

    ssl_protocols TLSv1.2 TLSv1.3; # Adjust if you need different protocols
    ssl_prefer_server_ciphers on;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Root directory
    root /var/www/html;
    index index.php index.html index.htm;

    # WordPress single site rules.
    # This assumes that you have WordPress installed in /var/www/html/
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # WordPress multisite rules.
    # Uncomment the following lines if you're using WordPress Multisite
    # and replace subdomain.example.com with your domain.
    #if (!-e $request_filename) {
    #    rewrite /wp-admin$ $scheme://$host$uri/ permanent;
    #    rewrite ^(/[^/]+)?(/wp-.*) $2 last;
    #    rewrite ^(/[^/]+)?(/.*\.php) $2 last;
    #}

    # Pass PHP scripts to PHP-FPM
    location ~ \.php$ {
        try_files $uri =404;
        include fastcgi_params;
        fastcgi_pass wordpress:9000; # Ensure this matches the name of your WordPress service and port in docker-compose.yml
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
    }

    # Security settings for better protection
    location ~ /\.ht {
        deny all;
    }

    # Disable access to sensitive files
    location ~ \.user\.ini {
        deny all;
    }
}
